name: Publish

on:
  push:
    tags:
      - v*

jobs:
  npm-publish:
    name: Publish on NPM
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      NPM_TOKEN: ${{secrets.NPM_TOKEN}}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: NPM install and build
        run: |
          npm ci
          npm run build
      - name: Check version
        run: |
          PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
          TAG_NAME=$(echo $GITHUB_REF | cut -d / -f 3)
          if [[ "v${PACKAGE_VERSION}" != "$TAG_NAME" ]]; then exit 1; fi
      - name: NPM publish
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          npm publish --access public

  docker:
    name: Push Docker image
    needs: npm-publish
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v2
      - name: Extract app version
        id: app-version
        run: |
          PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
          echo "::set-output name=PACKAGE_VERSION::$PACKAGE_VERSION"
      - uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./docker
          tags: |
            mockoon/cli:latest
            mockoon/cli:${{steps.app-version.outputs.PACKAGE_VERSION}}
          build-args: |
            version=${{steps.app-version.outputs.PACKAGE_VERSION}}
